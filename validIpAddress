public class Solution {
    public ArrayList<String> restoreIpAddresses(String s) {
        ArrayList<String> res = new ArrayList<>();
        if(s == null || s.length() < 4 || s.length() > 12)
            return res;
        dfs(s, "", 0 , res);
        return res;
    
    }
    
    public void dfs(String s, String sub, int index, ArrayList<String> res){
        //base case check:
        
        if(index == 4 || s.length() == 0){
            if(index ==4 && s.length()==0){
                res.add(sub.substring(0,sub.length() - 1));
            }
            return ;
        }
        
        //case 1: choose 1 digit
        dfs(s.substring(1), sub + s.substring(0,1) + ".", index + 1, res);
        //case 2 : choose 2 digit
        if(s.length() >1 && s.charAt(0) != '0'){
            dfs(s.substring(2), sub + s.substring(0,2) + ".", index + 1, res);
            //case 3: choose 3 digit
            if(s.length() > 2 && Integer.valueOf(s.substring(0,3)) <= 255 ){
                dfs(s.substring(3), sub + s.substring(0,3) + ".", index + 1, res);
            }
        }
        
    }
}
